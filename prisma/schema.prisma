// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
    provider = "prisma-client-js"
}

// prisma/schema.prisma
datasource db {
    provider = "postgresql"
    url      = env("DATABASE_URL")
}

model User {
    id        String   @id @default(cuid())
    email     String   @unique
    name      String
    role      String
    password  String
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
    // Student    Student?
    // Faculty    Faculty?
    // Department Department?
}

model Student {
    id      String @id @default(cuid())
    usn     String @unique
    name    String
    email   String @unique
    phone   String
    branch  String
    section String
    // Academics  Academics[]
    // User       User        @relation(fields: [id], references: [id])
    // Department Department  @relation(fields: [branch], references: [name])
    // Sections   Sections    @relation(fields: [section], references: [id])
}

model Faculty {
    id       String   @id @default(cuid())
    name     String
    email    String
    phone    String
    branch   String
    subjects String
    Sections String[]
    // User       User        @relation(fields: [id], references: [id])
    // Department Department  @relation(fields: [branch], references: [name])
    // Academics  Academics[]
    // Subjects   Subjects[]
    // Sections   Sections[]
}

// model Academics {
//     id        Int        @id @default(autoincrement())
//     usn       String
//     sem       Int
//     sgpa      Float
//     cgpa      Float
//     backlogs  Int
//     mentor_id String
//     // Student   Student[]
//     // Faculty   Faculty[]
//     // Subjects  Subjects[]
// }

// model Circulars {
//     id         String     @id @default(cuid())
//     title      String
//     content    String
//     attachment String
//     admin_id   String
//     Department Department @relation(fields: [admin_id], references: [secratory_id])
// }

model Subjects {
    subject_code String @id
    name         String
    credit       Int
    internal     Int
    external     Int
    faculty_id   String
    academic_id  Int
    // Faculty      Faculty[]
    // Academics    Academics[]
}

// model Sections {
//     id             String    @id
//     name           String
//     class_guide_id String
//     // Student        Student[]
//     // Faculty        Faculty[]
// }

model Department {
    id             String @id
    name           String @unique
    hod_id         String
    secratory_id   String @unique
    secratory_name String
    phone          String
    // Circulars      Circulars[]
    // User           User        @relation(fields: [secratory_id], references: [id])
    // Student        Student[]
    // Faculty        Faculty[]
}

model Mail {
    id      String   @id @default(cuid())
    name    String
    email   String
    subject String
    text    String
    date    String
    read    Boolean
    labels  String[]
}
